<?php

/**
 * @file
 * Contains ps_main_menu.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\commerce_product\Entity\Product;
use Drupal\Core\Url;
use Drupal\file\Entity\File;

/**
 * Implements hook_help().
 */
function ps_main_menu_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the ps_main_menu module.
    case 'help.page.ps_main_menu':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module renders main naviagtion menu in block.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function ps_main_menu_theme() {
  $templates = [];

  $templates['ps_main_menu'] = [
    'file' => 'includes/theme.inc',
    'variables' => [
      'links' => [],
    ],
  ];

  $templates['ps_user_menu'] = [
    'file' => 'includes/theme.inc',
    'variables' => [
      'cart_block' => [],
      'user_block' => [],
    ],
  ];

  $templates['ps_user_block'] = [
    'file' => 'includes/theme.inc',
    'variables' => [
      'url' => NULL,
      'icon' => NULL,
    ],
  ];

  $templates['ps_shopping_cart_block'] = [
    'file' => 'includes/theme.inc',
    'variables' => [
      'content' => [],
    ],
  ];

  $templates['ps_logo_block'] = [
    'file' => 'includes/theme.inc',
    'variables' => [
      'url' => [],
    ],
  ];

  return $templates;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ps_main_menu_form_views_form_commerce_cart_block_default_1_alter(&$form, &$form_state) {
  // Unset actions so save button doesn't show.
  unset($form['actions']);
}

/**
 * Prepares variables for the cart block element template.
 */
function ps_main_menu_preprocess_commerce_cart_block(&$variables) {
  $variables['content'][0]['#prefix'] = '<ul>';
  $variables['content'][0]['#suffix'] = '</ul>';
}

/**
 * Implements hook_preprocess_hook().
 */
function ps_main_menu_preprocess_views_view_fields__commerce_cart_block__default(&$variables) {
  // Get product from view field and load product url.
  if (isset($variables['row']) && !empty($variables['row'])) {
    $product_id = $variables['fields']['product_id']->handler;
    $row = $variables['row'];
    if ($row instanceof \Drupal\views\ResultRow) {
      $id = $product_id->getValue($row);
      $product = Product::load($id);
      if ($product) {
        $variables['url'] = $product->url();
        // Render first image.
        $image = File::load($product->field_slika[0]->target_id);
        $url = $image->getFileUri();
        $variables['image'] = [
          '#theme' => 'image_style',
          '#style_name' => 'cart_',
          '#uri' => $url,
        ];
      }
    }
  }
  $row = $variables['row'];
  $order = $row->_entity;
  $referenced_entities = $row->_relationship_entities;
  $order_item = $referenced_entities['order_items'];
  $variables['item_remove_url'] = Url::fromRoute('ps_main_menu.card_item_remove', [
    'order' => $order->id(),
    'order_item' => $order_item->id(),
  ])->toString();
}

/**
 * Implements hook_preprocess_hook().
 */
function ps_main_menu_preprocess_views_view_unformatted(&$variables) {
  $view = $variables['view'];
  if ($view->id() == 'commerce_cart_block' && !empty($view->result)) {
    $order = reset($view->result)->_entity;
    $viewBuilder = \Drupal::entityTypeManager()->getViewBuilder($order->getEntityTypeId());
    $content = $viewBuilder->viewField($order->total_price, ['label' => 'hidden']);
    $variables['total'] = $content;
    $url = Url::fromRoute('commerce_checkout.form', [
      'commerce_order' => $order->id(),
    ]);
    $variables['checkout_url'] = $url->toString();
  }

}

/**
 * Implements hook_preprocess_hook().
 */
function ps_main_menu_preprocess_commerce_product__product_overview(&$variables) {
  $product = $variables['product_entity'];
  $variations = $product->getVariations();
  $variation = reset($variations);
  $variables['add_to_cart_url'] = Url::fromRoute('ps_main_menu.add_to_card', [
    'variation' => $variation->id(),
  ])->toString();
}

/**
 * Implements hook_preprocess_hook().
 */
function ps_main_menu_preprocess_commerce_product(&$variables) {
  $product = $variables['product_entity'];
  $variations = $product->getVariations();
  $variation = reset($variations);
  $variables['add_to_cart_url'] = Url::fromRoute('ps_main_menu.add_to_card', [
    'variation' => $variation->id(),
  ])->toString();
}
